import golosinas.*
import mariano.*

describe "tests de mariano" {

	fixture {
		chocolatin.pesoInicial(100)
		mariano.comprar(chocolatin)
		mariano.comprar(caramelo)
		mariano.comprar(bombon)
	}

	test "test comprar" {
		assert.equals(3, mariano.golosinas().size())
		assert.that(mariano.golosinas().contains(chocolatin))
		assert.that(mariano.golosinas().contains(caramelo))
		assert.that(mariano.golosinas().contains(bombon))
		assert.notThat(mariano.golosinas().contains(chupetin))
	}
	
	test "probar golosinas" {
		/* habilitar las lineas anuladas cuando se complete la definicion 
		 * de las golosinas
		 */
		assert.equals(100, chocolatin.pesoInicial())
		assert.equals(5, caramelo.peso())
		assert.equals(15, bombon.peso())
		mariano.probarGolosinas()
		assert.equals(98, chocolatin.pesoActual())
		assert.equals(4, caramelo.peso())
		assert.equals(11, bombon.peso())
	}
	
	test "Hay golosina sin TAC"{
		assert.that(mariano.hayGolosinaSinTACC())
		}
	
	test " Indicar si todas las golosinas compradas tienen un precio menor o igual a 10 pesos"{
		assert.notThat(mariano.preciosCuidados())
	}
	
	test "primer golosina que encuentra en la bolsa del sabor frutilla"{
		assert.equals(caramelo,mariano.golosinaDeSabor(frutilla))
	}
	
	test " las golosinas que encuentre dentro de la bolsa del sabor escogido(frutilla)"{
		assert.equals([caramelo,bombon],mariano.golosinasDeSabor(frutilla))
		
	}
	
	test "los sabores de las golosinas de la bolsa, idealmente sin repetidos"{
		assert.equals(#{frutilla,chocolate},mariano.sabores())
	
	}
	
	test " la golosina mas cara en la bolsa de golosinas compradas"{
		chocolatin.pesoInicial(100)
		assert.equals(50,chocolatin.precio())
	}
	
	test "el peso de la bolsa de golosinas compradas"{
		assert.equals(120,mariano.pesoGolosinas())
	}
	
	test "Devuelve las golosinas que estan entre golosinasFaltantes"{
		assert.equals(#{alfajor,chupetin},mariano.golosinasFaltantes(#{alfajor, bombon, chocolatin, chupetin}))
	}
	
	test "Debe devolver las golosinas que están entre las golosinasDeseadas, y que Mariano no compró."{
		assert.equals(#{melon,vainilla},mariano.gustosFaltantes(#{melon, chocolate, frutilla ,vainilla}))
	}
	
	
	

	
}

